# Generated by Django 4.0.3 on 2022-03-29 09:55

import django.contrib.gis.db.models.fields
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("gcampusauth", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Your forename or team name. This will be publicly visible.",
                        max_length=280,
                        verbose_name="Name",
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=4326, verbose_name="Location"
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        blank=True,
                        help_text="An approximated location for the measurement",
                        max_length=280,
                        null=True,
                        verbose_name="Location name",
                    ),
                ),
                (
                    "time",
                    models.DateTimeField(
                        help_text="Date and time of the measurement",
                        verbose_name="Time",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Note on your measurement. This will be publicly visible.",
                        verbose_name="Note",
                    ),
                ),
                ("hidden", models.BooleanField(default=False, verbose_name="Hidden")),
                (
                    "search_vector",
                    django.contrib.postgres.search.SearchVectorField(
                        editable=False, null=True
                    ),
                ),
                (
                    "token",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="measurements",
                        to="gcampusauth.accesskey",
                    ),
                ),
            ],
            options={
                "verbose_name": "Measurement",
                "verbose_name_plural": "Measurements",
                "ordering": ("created_at", "name"),
                "default_manager_name": "all_objects",
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ParameterType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=280, verbose_name="Name"),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Short name"
                    ),
                ),
                (
                    "unit",
                    models.CharField(blank=True, max_length=10, verbose_name="Unit"),
                ),
                (
                    "calibration_formula",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Formula"
                    ),
                ),
            ],
            options={
                "verbose_name": "Parameter type",
                "verbose_name_plural": "Parameter types",
            },
        ),
        migrations.CreateModel(
            name="Water",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.GeometryField(
                        srid=4326, verbose_name="Geometry"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=dict, verbose_name="Tags"),
                ),
                (
                    "osm_id",
                    models.BigIntegerField(
                        null=True, unique=True, verbose_name="OpenStreetMap ID"
                    ),
                ),
                (
                    "osm_element_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "unknown"),
                            ("node", "node"),
                            ("way", "way"),
                            ("relation", "relation"),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                (
                    "flow_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "unknown"),
                            ("standing", "standing water"),
                            ("running", "running water"),
                        ],
                        max_length=16,
                        null=True,
                        verbose_name="Flow type",
                    ),
                ),
                (
                    "water_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "unknown"),
                            ("wetland", "wetland"),
                            ("coastline", "coastline"),
                            ("bay", "bay"),
                            ("river", "river"),
                            ("stream", "stream"),
                            ("tidal_channel", "tidal channel"),
                            ("canal", "canal"),
                            ("drain", "drain"),
                            ("ditch", "ditch"),
                            ("lagoon", "lagoon"),
                            ("oxbow", "oxbow"),
                            ("lake", "lake"),
                            ("basin", "basin"),
                            ("harbour", "harbour"),
                            ("pond", "pond"),
                            ("reservoir", "reservoir"),
                            ("wastewater", "wastewater"),
                            ("spring", "spring"),
                        ],
                        max_length=16,
                        null=True,
                        verbose_name="Water type",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=200)),
            ],
            options={
                "verbose_name": "Water",
                "verbose_name_plural": "Waters",
                "ordering": ("name", "osm_id"),
            },
        ),
        migrations.CreateModel(
            name="Parameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("value", models.FloatField(verbose_name="Value")),
                ("comment", models.TextField(blank=True, verbose_name="Note")),
                ("hidden", models.BooleanField(default=False, verbose_name="Hidden")),
                (
                    "measurement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameters",
                        to="gcampuscore.measurement",
                        verbose_name="Associated measurement",
                    ),
                ),
                (
                    "parameter_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="parameters",
                        to="gcampuscore.parametertype",
                        verbose_name="Parameter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parameter",
                "verbose_name_plural": "Parameters",
                "default_manager_name": "all_objects",
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name="measurement",
            name="water",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="measurements",
                to="gcampuscore.water",
            ),
        ),
        migrations.CreateModel(
            name="Limit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("limit_type", models.CharField(blank=True, max_length=20)),
                ("limit_value", models.FloatField(blank=True)),
                ("graph_color", models.CharField(default="red", max_length=20)),
                (
                    "parameter_limit",
                    models.ForeignKey(
                        default=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="parameter_limit",
                        to="gcampuscore.parametertype",
                        verbose_name="Parameter type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Limit",
            },
        ),
        migrations.AddIndex(
            model_name="measurement",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="gcampuscore_search__13d7ba_gin"
            ),
        ),
    ]
