#  Copyright (C) 2021 desklab gUG (haftungsbeschr√§nkt)
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Generated by Django 3.1.7 on 2021-06-14 12:24
from django.conf import settings
from django.db import migrations

TSVECTOR_CONF = getattr(settings, "TSVECTOR_CONF", "german")


class Migration(migrations.Migration):
    dependencies = [
        ("gcampuscore", "0033_remove_measurement_osm_id_and_more"),
    ]

    operations = [
        migrations.RunSQL(
            f"""
            ALTER TABLE "gcampuscore_measurement"
                -- DROP COLUMN "search_vector" CASCADE,
                ADD COLUMN "search_vector" tsvector GENERATED ALWAYS AS (
                    setweight(to_tsvector('{TSVECTOR_CONF}', coalesce("name", '')), 'A') ||
                    setweight(to_tsvector('{TSVECTOR_CONF}', coalesce("comment",'')), 'B') ||
                    setweight(to_tsvector('{TSVECTOR_CONF}', coalesce("location_name",'')), 'A')
                ) STORED
            """,
            reverse_sql=f""""
            ALTER TABLE "gcampuscore_measurement"
                DROP COLUMN "search_vector" CASCADE,
                ADD COLUMN "search_vector" tsvector GENERATED ALWAYS AS (
                    setweight(to_tsvector('{TSVECTOR_CONF}', coalesce("name", '')), 'A') ||
                    setweight(to_tsvector('{TSVECTOR_CONF}', coalesce("comment",'')), 'B') ||
                    setweight(to_tsvector('{TSVECTOR_CONF}', coalesce("location_name",'')), 'A') ||
                    setweight(to_tsvector('{TSVECTOR_CONF}', coalesce("water_name",'')), 'A')
                ) STORED
            """,
        ),  # noqa
    ]
