name: Build and Deploy

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          # In the code below, we enable the 'dev' or 'latest' tag depending
          # on the release type.
          tags: |
            type=pep440,pattern={{version}}
          flavor: |
            latest=auto

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH keys
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_DEPLOY_KEY }}"
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_HOST_KEY }}" >> ~/.ssh/known_hosts

      - name: Deploy to production
        if: contains(needs.build.outputs.tags, 'ghcr.io/${{ github.repository }}:latest')
        env:
          DOCKER_HOST: 'ssh://${{ secrets.DEPLOY_DOCKER_USER }}@${{ secrets.DEPLOY_DOCKER_HOST }}'
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: 'echo "Unable to deploy: ${{ needs.build.outputs.tags }}"'

      - name: Deploy to staging environmnet
        env:
          DOCKER_HOST: 'ssh://${{ secrets.DEPLOY_DOCKER_USER }}@${{ secrets.DEPLOY_DOCKER_HOST }}'
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: 'docker service update gcampus_gcampus_dev --with-registry-auth --image="${{ needs.build.outputs.tags[0] }}"'

  static:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies with apt
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends --no-install-suggests binutils libproj-dev gdal-bin libpango-1.0-0 libpangoft2-1.0-0

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install Node.js packages
        run: npm ci --also=dev

      - name: Build static files
        run: npm run build

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Requirements
        run: pip install -r requirements.txt

      - name: Upload static files
        run: python manage.py collectstatic --no-input
        env:
          USE_S3_STORAGE: True
          S3_ACCESS_KEY: ${{secrets.MINIO_ACCESS_KEY}}
          S3_SECRET_KEY: ${{secrets.MINIO_SECRET_KEY}}
          S3_ENDPOINT_URL: 'https://files.gewaessercampus.de'
          S3_BUCKET_NAME: 'gcampus'
