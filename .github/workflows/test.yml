name: Test

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    
    env:
      GCAMPUS_DB_USER: 'gcampus'
      GCAMPUS_DB_NAME: 'gcampustest'
      GCAMPUS_DB_PASSWORD: 'test-password'
      GCAMPUS_DB_HOST: 'localhost'
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgis:
        image: postgis/postgis:13-3.1
        env:
          POSTGRES_DB: ${{ env.GCAMPUS_DB_NAME }}
          POSTGRES_USER: ${{ env.GCAMPUS_DB_USER }}
          POSTGRES_PASSWORD: ${{ env.GCAMPUS_DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies with apt
        run: |
          sudo apt-get update &&
          sudo apt-get install -y
          --no-install-recommends --no-install-suggests
          binutils libproj-dev gdal-bin
          libpango-1.0-0 libpangoft2-1.0-0

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install Node.js packages
        run: npm ci --also=dev

      - name: Build static files
        run: npm run build

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Requirements
        run: pip install -r requirements.txt

      - name: Run Tests
        run: python manage.py test
        env:
          DJANGO_SETTINGS_MODULE: 'gcampus.settings.test'
          GCAMPUS_REDIS_HOST: 'localhost'
