# This is a basic workflow to help you get started with Actions

name: Build Static Files

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  static:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5

      - name: Install Node.js packages
        run: npm ci --also=dev

      - name: Build static files
        run: npm run build

      - name: Cache Primes
        id: cache-mircomamba
        uses: actions/cache@v2
        with:
          path: |
            ./bin/micromamba
            ~/micromamba
          key: ${{ runner.os }}-micromamba

      - name: Setup micromamba
        if: steps.cache-mircomamba.outputs.cache-hit != 'true'
        run: |
          wget -qO- https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
          ./bin/micromamba shell init -s bash -p ~/micromamba
      
      - name: Install Python and GDAL
        if: steps.cache-mircomamba.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          micromamba activate
          micromamba install -y python=3.9 gdal -c conda-forge

      - name: Install Requirements
        shell: bash -l {0}
        run: |
          micromamba activate
          pip install -r requirements.txt

      - name: Upload static files
        shell: bash -l {0}
        run: |
          micromamba activate
          python manage.py collectstatic --no-input
        env:
          USE_S3_STORAGE: True
          S3_ACCESS_KEY: ${{secrets.MINIO_ACCESS_KEY}}
          S3_SECRET_KEY: ${{secrets.MINIO_SECRET_KEY}}
          S3_ENDPOINT_URL: 'https://static.desk-lab.de'
          S3_BUCKET_NAME: 'gcampus'
